import{_ as p,p as e,q as i,J as c}from"./framework-4a7f5a2b.js";const n={},a=c('<h1 id="开发一个-cli" tabindex="-1"><a class="header-anchor" href="#开发一个-cli" aria-hidden="true">#</a> 开发一个 cli</h1><p>背景</p><p>在工作过程中，我们常常会从一个项目工程复制代码到一个新的项目，改项目配置信息、删除不必要的代码。</p><p>这样做的效率比较低，也挺繁琐，更不易于分享协作。</p><p>所以，我们可以制作一个cli工具，用来快速创建一个新项目的脚手架。如vue-cli就是一个非常好用的cli工具。</p><p>PS：cli 是一个全局安装的 npm 包。</p><p>目标</p><p>制作一个cli工具，步骤如下：</p><p>1、将我们的工程模板放到Github上。</p><p>如果工程模板有很多个，可以新建一个Organizations，统一放置到这里面。我工程模板有很多个，会统一放Organizations下面。</p><p>如果工程模板是放在公司gitlab上，则可以新建一个Group来统一管理。</p><p>2、定义控制台命令，包含其参数。</p><p>参数一般有 -v 显示包版本， -h 显示帮助信息，create 作为创建项目的命令参数。</p><p>如vue-cli的创新项目命令是 vue create [name]。</p><p>3、创建一个npm包工程，实现以上command功能。</p><p>如今Github已有很多cli工具，可以clone一个作为参考模板。</p><p>PS：我做的cli工具将在最下面放出链接。</p><p>问题</p><p>刚开始要做cli工具时，我头脑里就有几个问题。</p><p>1、怎么快速获取到输入的命令行参数？</p><p>我相信已有好的npm包可以完成这功能，我不想自己再从头做一遍。</p><p>2、怎么做选项选择功能、文字输入？</p><p>由于我的工程模板会有很多个，就想做个选项功能，创建工程时可以选择其中一个模板。</p><p>3、怎么优雅地输出日志？</p><p>console.log虽然可以用，但样式不好看，需要区分info、error日志。</p><p>方法</p><p>1、怎么快速获取到输入的命令行参数？</p><p>yargs模块能够解决如何处理命令行参数。</p><p>2、怎么做选项选择功能、文字输入？</p><p>inquirer模块能够处理命令行交互。</p><p>3、怎么优雅地输出日志？</p><p>chalk模块解决字符串样式问题。</p><p>具体实现步骤</p><p>1、获取模板列表</p><p>2、设置模板选项</p><p>3、获取模板的tag列表</p><p>4、设置tag选项</p><p>5、设置项目信息输入</p><p>6、下载zip_ball，并复制到目标位置</p><p>7、修改项目的信息</p><p>上面是入口js的代码，虽然有回调地狱，但还算比较清晰。</p><p>其他代码就不贴上，可以clone我的工程下来看。</p><p>工程地址：&#39;&#39;</p><p>发布npm包</p><p>1、npm adduser</p><p>在发布npm包前，需要先登录npm。</p><p>2、npm publish</p><p>在工程的根目录，执行这命令即可。</p>',48),l=[a];function t(r,o){return e(),i("div",null,l)}const d=p(n,[["render",t],["__file","index.html.vue"]]);export{d as default};
