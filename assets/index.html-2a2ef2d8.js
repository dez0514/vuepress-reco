import{_ as i,p as a,q as e,J as l}from"./framework-4a7f5a2b.js";const r={},h=l('<h1 id="开发一个-cli" tabindex="-1"><a class="header-anchor" href="#开发一个-cli" aria-hidden="true">#</a> 开发一个 cli</h1><h2 id="作用" tabindex="-1"><a class="header-anchor" href="#作用" aria-hidden="true">#</a> 作用</h2><p>保存一些空项目模板，便于新项目的复制。</p><h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>cli 是一个全局安装的 npm 包。</p><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>制作一个cli工具，步骤如下：</p><ol><li>将我们的工程模板放到Github上。 如果工程模板有很多个，可以新建一个Organizations，统一放置到这里面。我工程模板有很多个，会统一放Organizations下面。 如果工程模板是放在公司gitlab上，则可以新建一个Group来统一管理。</li><li>定义控制台命令，包含其参数。 参数一般有 -v 显示包版本， -h 显示帮助信息，create 作为创建项目的命令参数。 如vue-cli的创新项目命令是 vue create [name]。</li><li>创建一个npm包工程，实现以上command功能。 如今Github已有很多cli工具，可以clone一个作为参考模板。</li></ol><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>几个问题：</p><ol><li>怎么快速获取到输入的命令行参数？ 我相信已有好的npm包可以完成这功能，我不想自己再从头做一遍。</li><li>怎么做选项选择功能，文字输入？ 由于我的工程模板会有很多个，就想做个选项功能，创建工程时可以选择其中一个模板。</li><li>怎么优雅地输出日志？ console.log虽然可以用，但样式不好看，需要区分info，error日志。</li></ol><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h2><ol><li>怎么快速获取到输入的命令行参数？ yargs模块能够解决如何处理命令行参数。</li><li>怎么做选项选择功能. 文字输入？ inquirer模块能够处理命令行交互。</li><li>怎么优雅地输出日志？ chalk模块解决字符串样式问题。</li></ol><h2 id="具体实现步骤" tabindex="-1"><a class="header-anchor" href="#具体实现步骤" aria-hidden="true">#</a> 具体实现步骤</h2><ol><li>获取模板列表。</li><li>设置模板选项。</li><li>获取模板的tag列表。</li><li>设置tag选项。</li><li>设置项目信息输入。</li><li>下载zip_ball，并复制到目标位置。</li><li>修改项目的信息。</li></ol><h2 id="本地测试" tabindex="-1"><a class="header-anchor" href="#本地测试" aria-hidden="true">#</a> 本地测试</h2><p>可以通过<code>npm link</code>来进行本地测试。 测试完再发布npm。</p>',17),n=[h];function d(c,t){return a(),e("div",null,n)}const s=i(r,[["render",d],["__file","index.html.vue"]]);export{s as default};
