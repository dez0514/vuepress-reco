import{_ as e,p as i,q as l,J as a}from"./framework-4a7f5a2b.js";const t={},o=a('<h1 id="vuex状态管理" tabindex="-1"><a class="header-anchor" href="#vuex状态管理" aria-hidden="true">#</a> vuex状态管理</h1><p>MVC</p><ul><li>view:html+css</li><li>Controller:js</li><li>Moderl:data</li></ul><p>MVVM</p><ul><li>view</li><li>ViewModel</li><li>Model</li></ul><p>mvvm的理解 比如之前jquery，需要改变一个方块颜色 你需要先获取dom节点，再进行操作颜色</p><ol><li>区别： 就是一个双向绑定 抛弃了对dom的严格感知 无需对流程的过程化操作</li><li>实现： 写法上、代码</li></ol><h4 id="vue组件传值" tabindex="-1"><a class="header-anchor" href="#vue组件传值" aria-hidden="true">#</a> vue组件传值</h4><p>通过父节点 eventBus provide inject提供和注入 vuex</p>',9),r=[o];function d(n,c){return i(),l("div",null,r)}const u=e(t,[["render",d],["__file","index.html.vue"]]);export{u as default};
